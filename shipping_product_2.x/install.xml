<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Estimate Shipping</name>
    <version>1.0</version>
    <author>Willian Henrique Briotto</author>
    <link>https://github.com/willianbriotto/</link>
	<code>estimate_shipping_product_page_ocmod</code>
    <file path="catalog/controller/product/product.php">
        <operation>
		<search trim="true"><![CDATA[$data['entry_qty'] = $this->language->get('entry_qty');]]></search>
            <add position="before"><![CDATA[
      /**
       * Cart language
       **/
      $this->load->language('checkout/checkout');

      $data['text_address_existing'] = $this->language->get('text_address_existing');
      $data['text_address_new'] = $this->language->get('text_address_new');
      $data['text_select'] = $this->language->get('text_select');
      $data['text_none'] = $this->language->get('text_none');
      $data['text_loading'] = $this->language->get('text_loading');
      $data['text_shipping_method'] = $this->language->get('text_shipping_method');

      	$data['entry_postcode'] = $this->language->get('entry_postcode');
      	$data['entry_city'] = $this->language->get('entry_city');
      	$data['entry_country'] = $this->language->get('entry_country');
      	$data['entry_zone'] = $this->language->get('entry_zone');

      $data['button_quote'] = $this->language->get('button_quote');
      $data['button_shipping'] = $this->language->get('button_shipping');
      $data['button_cancel'] = $this->language->get('button_cancel');

      $this->load->model('account/address');

      $data['addresses'] = $this->model_account_address->getAddresses();

      if (isset($this->session->data['shipping_address']['postcode'])) {
      	$data['postcode'] = $this->session->data['shipping_address']['postcode'];
      } else {
      	$data['postcode'] = '';
      }

      if (isset($this->session->data['shipping_address']['country_id'])) {
      	$data['country_id'] = $this->session->data['shipping_address']['country_id'];
      } else {
      	$data['country_id'] = $this->config->get('config_country_id');
      }

      if (isset($this->session->data['shipping_address']['zone_id'])) {
      	$data['zone_id'] = $this->session->data['shipping_address']['zone_id'];
      } else {
      	$data['zone_id'] = '';
      }

      $this->load->model('localisation/country');

      $data['countries'] = $this->model_localisation_country->getCountries();

      if (isset($this->session->data['shipping_method'])) {
      	$data['shipping_method'] = $this->session->data['shipping_method']['code'];
      } else {
      	$data['shipping_method'] = '';
      }

      $this->load->model('setting/setting');
      $data['estimate_shipping'] = $this->model_setting_setting->getSetting('estimate_shipping', $store_id = 0);
      /**
       * Cart language
       **/



             ]]></add>
        </operation>
        <operation>
            <search><![CDATA[public function getRecurringDescription() { ]]></search>
            <add position="before"><![CDATA[
	/**
	  * Shipping estimate in page of product
	  */
	public function country() {
  		$json = array();

  		$this->load->model('localisation/country');

  		$country_info = $this->model_localisation_country->getCountry($this->request->get['country_id']);

  		if ($country_info) {
  			$this->load->model('localisation/zone');

  			$json = array(
  				'country_id'        => $country_info['country_id'],
  				'name'              => $country_info['name'],
  				'iso_code_2'        => $country_info['iso_code_2'],
  				'iso_code_3'        => $country_info['iso_code_3'],
  				'address_format'    => $country_info['address_format'],
  				'postcode_required' => $country_info['postcode_required'],
  				'zone'              => $this->model_localisation_zone->getZonesByCountryId($this->request->get['country_id']),
  				'status'            => $country_info['status']
  			);
  		}

  		$this->response->addHeader('Content-Type: application/json');
  		$this->response->setOutput(json_encode($json));
  	}

	public function quote() {
    if (version_compare(VERSION, '2.2.0.0', '>')) {
      $this->load->language('extension/total/shipping');
    } else {
      $this->load->language('total/shipping');
    }

		$json = array();

		if (!$this->cart->hasProducts()) {
			$json['error']['warning'] = $this->language->get('error_product');
		}

		if (!$this->cart->hasShipping()) {
			$json['error']['warning'] = sprintf($this->language->get('error_no_shipping'), $this->url->link('information/contact'));
		}

		if ($this->request->post['country_id'] == '') {
			$json['error']['country'] = $this->language->get('error_country');
		}

		if (!isset($this->request->post['zone_id']) || $this->request->post['zone_id'] == '') {
			$json['error']['zone'] = $this->language->get('error_zone');
		}

		$this->load->model('localisation/country');

		$country_info = $this->model_localisation_country->getCountry($this->request->post['country_id']);

		if ($country_info && $country_info['postcode_required'] && (utf8_strlen(trim($this->request->post['postcode'])) < 2 || utf8_strlen(trim($this->request->post['postcode'])) > 10)) {
			$json['error']['postcode'] = $this->language->get('error_postcode');
		}

		if (!$json) {
			$this->tax->setShippingAddress($this->request->post['country_id'], $this->request->post['zone_id']);

			if ($country_info) {
				$country = $country_info['name'];
				$iso_code_2 = $country_info['iso_code_2'];
				$iso_code_3 = $country_info['iso_code_3'];
				$address_format = $country_info['address_format'];
			} else {
				$country = '';
				$iso_code_2 = '';
				$iso_code_3 = '';
				$address_format = '';
			}

			$this->load->model('localisation/zone');

			$zone_info = $this->model_localisation_zone->getZone($this->request->post['zone_id']);

			if ($zone_info) {
				$zone = $zone_info['name'];
				$zone_code = $zone_info['code'];
			} else {
				$zone = '';
				$zone_code = '';
			}

			$this->session->data['shipping_address'] = array(
				'firstname'      => '',
				'lastname'       => '',
				'company'        => '',
				'address_1'      => '',
				'address_2'      => '',
				'postcode'       => $this->request->post['postcode'],
				'city'           => '',
				'zone_id'        => $this->request->post['zone_id'],
				'zone'           => $zone,
				'zone_code'      => $zone_code,
				'country_id'     => $this->request->post['country_id'],
				'country'        => $country,
				'iso_code_2'     => $iso_code_2,
				'iso_code_3'     => $iso_code_3,
				'address_format' => $address_format
			);

			$quote_data = array();

			$this->load->model('extension/extension');

			$results = $this->model_extension_extension->getExtensions('shipping');

			foreach ($results as $result) {
				if ($this->config->get($result['code'] . '_status')) {
          if (version_compare(VERSION, '2.2.0.0', '>')) {
            $this->load->model('extension/shipping/' . $result['code']);
            $quote = $this->{'model_extension_shipping_' . $result['code']}->getQuote($this->session->data['shipping_address']);
          } else {
            $this->load->model('shipping/' . $result['code']);
            $quote = $this->{'model_shipping_' . $result['code']}->getQuote($this->session->data['shipping_address']);
          }

					if ($quote) {
						$quote_data[$result['code']] = array(
							'title'      => $quote['title'],
							'quote'      => $quote['quote'],
							'sort_order' => $quote['sort_order'],
							'error'      => $quote['error']
						);
					}
				}
			}

			$sort_order = array();

			foreach ($quote_data as $key => $value) {
				$sort_order[$key] = $value['sort_order'];
			}

			array_multisort($sort_order, SORT_ASC, $quote_data);

			$this->session->data['shipping_methods'] = $quote_data;

			if ($this->session->data['shipping_methods']) {
				$json['shipping_method'] = $this->session->data['shipping_methods'];
			} else {
				$json['error']['warning'] = sprintf($this->language->get('error_no_shipping'), $this->url->link('information/contact'));
			}
		}

		//Remove temp cart
		$this->cart->clear();
		//Add temp itens to cart
		foreach ($this->session->data['cacheCart'] as $product_cart){
			$option = array();
			foreach ($product_cart['option'] as $product_option){
					$option[$product_option['product_option_id']]=$product_option['product_option_value_id'];
			}
			$this->cart->add($product_cart['product_id'], $product_cart['quantity'], $option, $this->session->data['PID']);
		}
		
		unset($this->session->data['cacheCart']);
		unset($this->session->data['PID']);

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}

	public function quoteProduct() {
		$this->session->data['cacheCart'] = $this->cart->getProducts();
		$this->cart->clear();//Clean current cart

		if (isset($this->request->post['product_id'])) :
			$product_id = $this->request->post['product_id'];
		else :
			$product_id = 0;
		endif;

		$this->load->model('catalog/product');
		$product_info = $this->model_catalog_product->getProduct($product_id);

		if ($product_info) {//Ckeck if has this product_id
			if (isset($this->request->post['quantity'])) {
				$quantity = $this->request->post['quantity'];
			} else {
				$quantity = 1;
			}

			if (isset($this->request->post['option'])) {
				$option = array_filter($this->request->post['option']);
			} else {
				$option = array();
			}

			if (isset($this->request->post['profile_id'])) {
				$profile_id = $this->request->post['profile_id'];
			} else {
				$profile_id = 0;
			}

			$this->session->data['PID'] = $profile_id;
			$this->cart->add($this->request->post['product_id'], $quantity, $option, $profile_id);
		}
		$json['success'] = 1;
		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
            ]]></add>
        </operation>
    </file>
    <file path="catalog/view/theme/*/template/product/product.tpl">
        <operation>
            <search><![CDATA[<input type="text" name="quantity" value="<?php echo $minimum; ?>" size="2" id="input-quantity" class="form-control" />]]></search>
            <add position="after"><![CDATA[
              <!-- Shipping calculate -->
              <?php if(isset($estimate_shipping) && isset($estimate_shipping['estimate_shipping_status']) && $estimate_shipping['estimate_shipping_status']) { ?>
              <h3><?php echo $estimate_shipping['estimate_shipping_header_title']; ?></h3>
              <div class="form-horizontal">
                <?php if($estimate_shipping['estimate_shipping_geo']) { ?>
                <div class="form-group required">
                  <div class="col-sm-12">
                    <label class="control-label" for="input-country"><?php echo $entry_country; ?></label>
                    <select name="country_id" id="input-country" class="form-control">
                      <option value=""><?php echo $text_select; ?></option>
                      <?php foreach ($countries as $country) { ?>
                      <?php if ($country['country_id'] == $country_id) { ?>
                      <option value="<?php echo $country['country_id']; ?>" selected="selected"><?php echo $country['name']; ?></option>
                      <?php } else { ?>
                      <option value="<?php echo $country['country_id']; ?>"><?php echo $country['name']; ?></option>
                      <?php } ?>
                      <?php } ?>
                    </select>
                  </div>
                </div>
                <div class="form-group required">
                  <div class="col-sm-12">
                    <label class="control-label" for="input-zone"><?php echo $entry_zone; ?></label>
                    <select name="zone_id" id="input-zone" class="form-control">
                    </select>
                  </div>
                </div>
                <?php } ?>
                <div class="form-group required">
                  <div class="col-sm-12">
                    <label class="control-label" for="input-postcode"><?php echo $entry_postcode; ?></label>
                    <input type="text" name="postcode" value="<?php echo $postcode; ?>" placeholder="<?php echo $entry_postcode; ?>" id="input-postcode" class="form-control" />
                  </div>
                </div>
                <button type="button" id="button-quote" data-loading-text="<?php echo $text_loading; ?>" class="btn btn-primary"><?php echo $button_quote; ?></button>
              </div>
              <?php } ?>
              <!-- Shipping calculate -->
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[<?php echo $footer; ?>]]></search>
            <add position="before"><![CDATA[
<script type="text/javascript">
$('#button-quote').on('click', function() {
    $.ajax({
          url: 'index.php?route=product/product/quoteProduct',
          type: 'post',
          data: $('#product input[type=\'text\'], #product input[type=\'hidden\'], #product input[type=\'radio\']:checked, #product input[type=\'checkbox\']:checked, #product select, #product textarea'),
          dataType: 'json',
          beforeSend: function() {
              $('#button-quote').button('loading');
          },
          complete: function() {
              $('#button-quote').button('reset');
          },
          success: function(json) {
              $('.alert, .text-danger').remove();
              $.ajax({
    				url: 'index.php?route=product/product/quote',
    				type: 'post',
    				data: 'country_id=' + $('select[name=\'country_id\']').val() + '&zone_id=' + $('select[name=\'zone_id\']').val() + '&postcode=' + encodeURIComponent($('input[name=\'postcode\']').val()),
    				dataType: 'json',
    				success: function(json) {
                        if (json['error']) {
                              if (json['error']['warning']) {
                                  $('.breadcrumb').after('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error']['warning'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');

                                  $('html, body').animate({ scrollTop: 0 }, 'slow');
                              }

                              if (json['error']['country']) {
                                  $('select[name=\'country_id\']').after('<div class="text-danger">' + json['error']['country'] + '</div>');
                              }

                              if (json['error']['zone']) {
                                  $('select[name=\'zone_id\']').after('<div class="text-danger">' + json['error']['zone'] + '</div>');
                              }

                              if (json['error']['postcode']) {
                                  $('input[name=\'postcode\']').after('<div class="text-danger">' + json['error']['postcode'] + '</div>');
                              }
                        }

                          if (json['shipping_method']) {
                              $('#modal-shipping').remove();

                              html  = '<div id="modal-shipping" class="modal">';
                              html += '  <div class="modal-dialog">';
                              html += '    <div class="modal-content">';
                              html += '      <div class="modal-header">';
                              html += '        <h4 class="modal-title"><?php echo $estimate_shipping["estimate_shipping_popup_title"]; ?></h4>';
                              html += '      </div>';
                              html += '      <div class="modal-body">';

                              for (i in json['shipping_method']) {
                                  html += '<p><strong>' + json['shipping_method'][i]['title'] + '</strong></p>';

                                  if (!json['shipping_method'][i]['error']) {
                                      for (j in json['shipping_method'][i]['quote']) {
                                          html += '<div class="radio">';
                                          html += '  <label>';
                                          html += json['shipping_method'][i]['quote'][j]['title'] + ' - ' + json['shipping_method'][i]['quote'][j]['text'] + '</label></div>';
                                      }
                                  } else {
                                      html += '<div class="alert alert-danger">' + json['shipping_method'][i]['error'] + '</div>';
                                  }
                              }

                              html += '      </div>';
                              html += '      <div class="modal-footer">';
                              html += '        <button type="button" class="btn btn-default" data-dismiss="modal"><?php echo $button_cancel; ?></button>';

                              html += '      </div>';
                              html += '    </div>';
                              html += '  </div>';
                              html += '</div> ';

                              $('body').append(html);

                              $('#modal-shipping').modal('show');

                              $('input[name=\'shipping_method\']').on('change', function() {
                                  $('#button-shipping').prop('disabled', false);
                              });
                          }
    				}//success
    			});
    		},
    		error: function(xhr, ajaxOptions, thrownError) {
    			alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
    		}
    });
});
</script>
<script type="text/javascript">
$('select[name=\'country_id\']').on('change', function() {
    $.ajax({
		url: 'index.php?route=product/product/country&country_id=' + this.value,
        dataType: 'json',
        beforeSend: function() {
            $('select[name=\'country_id\']').after(' <i class="fa fa-circle-o-notch fa-spin"></i>');
        },
        complete: function() {
            $('.fa-spin').remove();
        },
        success: function(json) {
            if (json['postcode_required'] == '1') {
                  $('input[name=\'postcode\']').parent().parent().addClass('required');
            } else {
                  $('input[name=\'postcode\']').parent().parent().removeClass('required');
            }

            html = '<option value=""><?php echo $text_select; ?></option>';

            if (json['zone'] && json['zone'] != '') {
                  for (i = 0; i < json['zone'].length; i++) {
                      html += '<option value="' + json['zone'][i]['zone_id'] + '"';

                      if (json['zone'][i]['zone_id'] == '<?php echo $zone_id; ?>') {
                          html += ' selected="selected"';
                      }

                      html += '>' + json['zone'][i]['name'] + '</option>';
                  }
            } else {
                html += '<option value="0" selected="selected"><?php echo $text_none; ?></option>';
            }

              $('select[name=\'zone_id\']').html(html);
        },
        error: function(xhr, ajaxOptions, thrownError) {
              alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
    });
});

$('select[name=\'country_id\']').trigger('change');
</script>
            ]]></add>
        </operation>
    </file>
</modification>
